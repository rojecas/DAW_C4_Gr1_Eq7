{"ast":null,"code":"(function () {\n  var C = typeof window === 'undefined' ? require('./Crypto').Crypto : window.Crypto; // Shortcuts\n\n  var util = C.util,\n      charenc = C.charenc,\n      UTF8 = charenc.UTF8,\n      Binary = charenc.Binary;\n  var MARC4 = C.MARC4 = {\n    /**\r\n     * Public API\r\n     */\n    encrypt: function (message, password) {\n      var // Convert to bytes\n      m = UTF8.stringToBytes(message),\n          // Generate random IV\n      iv = util.randomBytes(16),\n          // Generate key\n      k = password.constructor == String ? // Derive key from passphrase\n      C.PBKDF2(password, iv, 32, {\n        asBytes: true\n      }) : // else, assume byte array representing cryptographic key\n      password; // Encrypt\n\n      MARC4._marc4(m, k, 1536); // Return ciphertext\n\n\n      return util.bytesToBase64(iv.concat(m));\n    },\n    decrypt: function (ciphertext, password) {\n      var // Convert to bytes\n      c = util.base64ToBytes(ciphertext),\n          // Separate IV and message\n      iv = c.splice(0, 16),\n          // Generate key\n      k = password.constructor == String ? // Derive key from passphrase\n      C.PBKDF2(password, iv, 32, {\n        asBytes: true\n      }) : // else, assume byte array representing cryptographic key\n      password; // Decrypt\n\n      MARC4._marc4(c, k, 1536); // Return plaintext\n\n\n      return UTF8.bytesToString(c);\n    },\n\n    /**\r\n     * Internal methods\r\n     */\n    // The core\n    _marc4: function (m, k, drop) {\n      // State variables\n      var i, j, s, temp; // Key setup\n\n      for (i = 0, s = []; i < 256; i++) s[i] = i;\n\n      for (i = 0, j = 0; i < 256; i++) {\n        j = (j + s[i] + k[i % k.length]) % 256; // Swap\n\n        temp = s[i];\n        s[i] = s[j];\n        s[j] = temp;\n      } // Clear counters\n\n\n      i = j = 0; // Encryption\n\n      for (var k = -drop; k < m.length; k++) {\n        i = (i + 1) % 256;\n        j = (j + s[i]) % 256; // Swap\n\n        temp = s[i];\n        s[i] = s[j];\n        s[j] = temp; // Stop here if we're still dropping keystream\n\n        if (k < 0) continue; // Encrypt\n\n        m[k] ^= s[(s[i] + s[j]) % 256];\n      }\n    }\n  };\n})();","map":{"version":3,"names":["C","window","require","Crypto","util","charenc","UTF8","Binary","MARC4","encrypt","message","password","m","stringToBytes","iv","randomBytes","k","constructor","String","PBKDF2","asBytes","_marc4","bytesToBase64","concat","decrypt","ciphertext","c","base64ToBytes","splice","bytesToString","drop","i","j","s","temp","length"],"sources":["D:/MySource/DAW_C4_Gr1_Eq7/FrontEndMF/node_modules/cryptojs/lib/MARC4.js"],"sourcesContent":["(function(){\r\n\r\nvar C = (typeof window === 'undefined') ? require('./Crypto').Crypto : window.Crypto;\r\n\r\n// Shortcuts\r\nvar util = C.util,\r\n    charenc = C.charenc,\r\n    UTF8 = charenc.UTF8,\r\n    Binary = charenc.Binary;\r\n\r\nvar MARC4 = C.MARC4 = {\r\n\r\n\t/**\r\n\t * Public API\r\n\t */\r\n\r\n\tencrypt: function (message, password) {\r\n\r\n\t\tvar\r\n\r\n\t\t    // Convert to bytes\r\n\t\t    m = UTF8.stringToBytes(message),\r\n\r\n\t\t    // Generate random IV\r\n\t\t    iv = util.randomBytes(16),\r\n\r\n\t\t    // Generate key\r\n\t\t    k = password.constructor == String ?\r\n\t\t        // Derive key from passphrase\r\n\t\t        C.PBKDF2(password, iv, 32, { asBytes: true }) :\r\n\t\t        // else, assume byte array representing cryptographic key\r\n\t\t        password;\r\n\r\n\t\t// Encrypt\r\n\t\tMARC4._marc4(m, k, 1536);\r\n\r\n\t\t// Return ciphertext\r\n\t\treturn util.bytesToBase64(iv.concat(m));\r\n\r\n\t},\r\n\r\n\tdecrypt: function (ciphertext, password) {\r\n\r\n\t\tvar\r\n\r\n\t\t    // Convert to bytes\r\n\t\t    c = util.base64ToBytes(ciphertext),\r\n\r\n\t\t    // Separate IV and message\r\n\t\t    iv = c.splice(0, 16),\r\n\r\n\t\t    // Generate key\r\n\t\t    k = password.constructor == String ?\r\n\t\t        // Derive key from passphrase\r\n\t\t        C.PBKDF2(password, iv, 32, { asBytes: true }) :\r\n\t\t        // else, assume byte array representing cryptographic key\r\n\t\t        password;\r\n\r\n\t\t// Decrypt\r\n\t\tMARC4._marc4(c, k, 1536);\r\n\r\n\t\t// Return plaintext\r\n\t\treturn UTF8.bytesToString(c);\r\n\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Internal methods\r\n\t */\r\n\r\n\t// The core\r\n\t_marc4: function (m, k, drop) {\r\n\r\n\t\t// State variables\r\n\t\tvar i, j, s, temp;\r\n\r\n\t\t// Key setup\r\n\t\tfor (i = 0, s = []; i < 256; i++) s[i] = i;\r\n\t\tfor (i = 0, j = 0;  i < 256; i++) {\r\n\r\n\t\t\tj = (j + s[i] + k[i % k.length]) % 256;\r\n\r\n\t\t\t// Swap\r\n\t\t\ttemp = s[i];\r\n\t\t\ts[i] = s[j];\r\n\t\t\ts[j] = temp;\r\n\r\n\t\t}\r\n\r\n\t\t// Clear counters\r\n\t\ti = j = 0;\r\n\r\n\t\t// Encryption\r\n\t\tfor (var k = -drop; k < m.length; k++) {\r\n\r\n\t\t\ti = (i + 1) % 256;\r\n\t\t\tj = (j + s[i]) % 256;\r\n\r\n\t\t\t// Swap\r\n\t\t\ttemp = s[i];\r\n\t\t\ts[i] = s[j];\r\n\t\t\ts[j] = temp;\r\n\r\n\t\t\t// Stop here if we're still dropping keystream\r\n\t\t\tif (k < 0) continue;\r\n\r\n\t\t\t// Encrypt\r\n\t\t\tm[k] ^= s[(s[i] + s[j]) % 256];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n})();\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}