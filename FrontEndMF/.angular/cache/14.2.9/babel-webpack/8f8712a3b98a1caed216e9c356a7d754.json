{"ast":null,"code":"if (typeof Crypto == \"undefined\" || !Crypto.util) {\n  (function () {\n    var base64map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"; // Global Crypto object\n    // with browser window or with node module\n\n    var Crypto = typeof window === 'undefined' ? exports.Crypto = {} : window.Crypto = {}; // Crypto utilities\n\n    var util = Crypto.util = {\n      // Bit-wise rotate left\n      rotl: function (n, b) {\n        return n << b | n >>> 32 - b;\n      },\n      // Bit-wise rotate right\n      rotr: function (n, b) {\n        return n << 32 - b | n >>> b;\n      },\n      // Swap big-endian to little-endian and vice versa\n      endian: function (n) {\n        // If number given, swap endian\n        if (n.constructor == Number) {\n          return util.rotl(n, 8) & 0x00FF00FF | util.rotl(n, 24) & 0xFF00FF00;\n        } // Else, assume array and swap all items\n\n\n        for (var i = 0; i < n.length; i++) n[i] = util.endian(n[i]);\n\n        return n;\n      },\n      // Generate an array of any length of random bytes\n      randomBytes: function (n) {\n        for (var bytes = []; n > 0; n--) bytes.push(Math.floor(Math.random() * 256));\n\n        return bytes;\n      },\n      // Convert a byte array to big-endian 32-bit words\n      bytesToWords: function (bytes) {\n        for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8) words[b >>> 5] |= (bytes[i] & 0xFF) << 24 - b % 32;\n\n        return words;\n      },\n      // Convert big-endian 32-bit words to a byte array\n      wordsToBytes: function (words) {\n        for (var bytes = [], b = 0; b < words.length * 32; b += 8) bytes.push(words[b >>> 5] >>> 24 - b % 32 & 0xFF);\n\n        return bytes;\n      },\n      // Convert a byte array to a hex string\n      bytesToHex: function (bytes) {\n        for (var hex = [], i = 0; i < bytes.length; i++) {\n          hex.push((bytes[i] >>> 4).toString(16));\n          hex.push((bytes[i] & 0xF).toString(16));\n        }\n\n        return hex.join(\"\");\n      },\n      // Convert a hex string to a byte array\n      hexToBytes: function (hex) {\n        for (var bytes = [], c = 0; c < hex.length; c += 2) bytes.push(parseInt(hex.substr(c, 2), 16));\n\n        return bytes;\n      },\n      // Convert a byte array to a base-64 string\n      bytesToBase64: function (bytes) {\n        // Use browser-native function if it exists\n        if (typeof btoa == \"function\") return btoa(Binary.bytesToString(bytes));\n\n        for (var base64 = [], i = 0; i < bytes.length; i += 3) {\n          var triplet = bytes[i] << 16 | bytes[i + 1] << 8 | bytes[i + 2];\n\n          for (var j = 0; j < 4; j++) {\n            if (i * 8 + j * 6 <= bytes.length * 8) base64.push(base64map.charAt(triplet >>> 6 * (3 - j) & 0x3F));else base64.push(\"=\");\n          }\n        }\n\n        return base64.join(\"\");\n      },\n      // Convert a base-64 string to a byte array\n      base64ToBytes: function (base64) {\n        // Use browser-native function if it exists\n        if (typeof atob == \"function\") return Binary.stringToBytes(atob(base64)); // Remove non-base-64 characters\n\n        base64 = base64.replace(/[^A-Z0-9+\\/]/ig, \"\");\n\n        for (var bytes = [], i = 0, imod4 = 0; i < base64.length; imod4 = ++i % 4) {\n          if (imod4 == 0) continue;\n          bytes.push((base64map.indexOf(base64.charAt(i - 1)) & Math.pow(2, -2 * imod4 + 8) - 1) << imod4 * 2 | base64map.indexOf(base64.charAt(i)) >>> 6 - imod4 * 2);\n        }\n\n        return bytes;\n      }\n    }; // Crypto character encodings\n\n    var charenc = Crypto.charenc = {}; // UTF-8 encoding\n\n    var UTF8 = charenc.UTF8 = {\n      // Convert a string to a byte array\n      stringToBytes: function (str) {\n        return Binary.stringToBytes(unescape(encodeURIComponent(str)));\n      },\n      // Convert a byte array to a string\n      bytesToString: function (bytes) {\n        return decodeURIComponent(escape(Binary.bytesToString(bytes)));\n      }\n    }; // Binary encoding\n\n    var Binary = charenc.Binary = {\n      // Convert a string to a byte array\n      stringToBytes: function (str) {\n        for (var bytes = [], i = 0; i < str.length; i++) bytes.push(str.charCodeAt(i) & 0xFF);\n\n        return bytes;\n      },\n      // Convert a byte array to a string\n      bytesToString: function (bytes) {\n        for (var str = [], i = 0; i < bytes.length; i++) str.push(String.fromCharCode(bytes[i]));\n\n        return str.join(\"\");\n      }\n    };\n  })();\n}","map":{"version":3,"names":["Crypto","util","base64map","window","exports","rotl","n","b","rotr","endian","constructor","Number","i","length","randomBytes","bytes","push","Math","floor","random","bytesToWords","words","wordsToBytes","bytesToHex","hex","toString","join","hexToBytes","c","parseInt","substr","bytesToBase64","btoa","Binary","bytesToString","base64","triplet","j","charAt","base64ToBytes","atob","stringToBytes","replace","imod4","indexOf","pow","charenc","UTF8","str","unescape","encodeURIComponent","decodeURIComponent","escape","charCodeAt","String","fromCharCode"],"sources":["D:/MySource/DAW_C4_Gr1_Eq7/FrontEndMF/node_modules/cryptojs/lib/Crypto.js"],"sourcesContent":["if (typeof Crypto == \"undefined\" || ! Crypto.util)\r\n{\r\n(function(){\r\n\r\nvar base64map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n\r\n// Global Crypto object\r\n// with browser window or with node module\r\nvar Crypto = (typeof window === 'undefined') ? exports.Crypto = {} : window.Crypto = {}; \r\n\r\n// Crypto utilities\r\nvar util = Crypto.util = {\r\n\r\n\t// Bit-wise rotate left\r\n\trotl: function (n, b) {\r\n\t\treturn (n << b) | (n >>> (32 - b));\r\n\t},\r\n\r\n\t// Bit-wise rotate right\r\n\trotr: function (n, b) {\r\n\t\treturn (n << (32 - b)) | (n >>> b);\r\n\t},\r\n\r\n\t// Swap big-endian to little-endian and vice versa\r\n\tendian: function (n) {\r\n\r\n\t\t// If number given, swap endian\r\n\t\tif (n.constructor == Number) {\r\n\t\t\treturn util.rotl(n,  8) & 0x00FF00FF |\r\n\t\t\t       util.rotl(n, 24) & 0xFF00FF00;\r\n\t\t}\r\n\r\n\t\t// Else, assume array and swap all items\r\n\t\tfor (var i = 0; i < n.length; i++)\r\n\t\t\tn[i] = util.endian(n[i]);\r\n\t\treturn n;\r\n\r\n\t},\r\n\r\n\t// Generate an array of any length of random bytes\r\n\trandomBytes: function (n) {\r\n\t\tfor (var bytes = []; n > 0; n--)\r\n\t\t\tbytes.push(Math.floor(Math.random() * 256));\r\n\t\treturn bytes;\r\n\t},\r\n\r\n\t// Convert a byte array to big-endian 32-bit words\r\n\tbytesToWords: function (bytes) {\r\n\t\tfor (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)\r\n\t\t\twords[b >>> 5] |= (bytes[i] & 0xFF) << (24 - b % 32);\r\n\t\treturn words;\r\n\t},\r\n\r\n\t// Convert big-endian 32-bit words to a byte array\r\n\twordsToBytes: function (words) {\r\n\t\tfor (var bytes = [], b = 0; b < words.length * 32; b += 8)\r\n\t\t\tbytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);\r\n\t\treturn bytes;\r\n\t},\r\n\r\n\t// Convert a byte array to a hex string\r\n\tbytesToHex: function (bytes) {\r\n\t\tfor (var hex = [], i = 0; i < bytes.length; i++) {\r\n\t\t\thex.push((bytes[i] >>> 4).toString(16));\r\n\t\t\thex.push((bytes[i] & 0xF).toString(16));\r\n\t\t}\r\n\t\treturn hex.join(\"\");\r\n\t},\r\n\r\n\t// Convert a hex string to a byte array\r\n\thexToBytes: function (hex) {\r\n\t\tfor (var bytes = [], c = 0; c < hex.length; c += 2)\r\n\t\t\tbytes.push(parseInt(hex.substr(c, 2), 16));\r\n\t\treturn bytes;\r\n\t},\r\n\r\n\t// Convert a byte array to a base-64 string\r\n\tbytesToBase64: function (bytes) {\r\n\r\n\t\t// Use browser-native function if it exists\r\n\t\tif (typeof btoa == \"function\") return btoa(Binary.bytesToString(bytes));\r\n\r\n\t\tfor(var base64 = [], i = 0; i < bytes.length; i += 3) {\r\n\t\t\tvar triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\r\n\t\t\tfor (var j = 0; j < 4; j++) {\r\n\t\t\t\tif (i * 8 + j * 6 <= bytes.length * 8)\r\n\t\t\t\t\tbase64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));\r\n\t\t\t\telse base64.push(\"=\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn base64.join(\"\");\r\n\r\n\t},\r\n\r\n\t// Convert a base-64 string to a byte array\r\n\tbase64ToBytes: function (base64) {\r\n\r\n\t\t// Use browser-native function if it exists\r\n\t\tif (typeof atob == \"function\") return Binary.stringToBytes(atob(base64));\r\n\r\n\t\t// Remove non-base-64 characters\r\n\t\tbase64 = base64.replace(/[^A-Z0-9+\\/]/ig, \"\");\r\n\r\n\t\tfor (var bytes = [], i = 0, imod4 = 0; i < base64.length; imod4 = ++i % 4) {\r\n\t\t\tif (imod4 == 0) continue;\r\n\t\t\tbytes.push(((base64map.indexOf(base64.charAt(i - 1)) & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2)) |\r\n\t\t\t           (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));\r\n\t\t}\r\n\r\n\t\treturn bytes;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// Crypto character encodings\r\nvar charenc = Crypto.charenc = {};\r\n\r\n// UTF-8 encoding\r\nvar UTF8 = charenc.UTF8 = {\r\n\r\n\t// Convert a string to a byte array\r\n\tstringToBytes: function (str) {\r\n\t\treturn Binary.stringToBytes(unescape(encodeURIComponent(str)));\r\n\t},\r\n\r\n\t// Convert a byte array to a string\r\n\tbytesToString: function (bytes) {\r\n\t\treturn decodeURIComponent(escape(Binary.bytesToString(bytes)));\r\n\t}\r\n\r\n};\r\n\r\n// Binary encoding\r\nvar Binary = charenc.Binary = {\r\n\r\n\t// Convert a string to a byte array\r\n\tstringToBytes: function (str) {\r\n\t\tfor (var bytes = [], i = 0; i < str.length; i++)\r\n\t\t\tbytes.push(str.charCodeAt(i) & 0xFF);\r\n\t\treturn bytes;\r\n\t},\r\n\r\n\t// Convert a byte array to a string\r\n\tbytesToString: function (bytes) {\r\n\t\tfor (var str = [], i = 0; i < bytes.length; i++)\r\n\t\t\tstr.push(String.fromCharCode(bytes[i]));\r\n\t\treturn str.join(\"\");\r\n\t}\r\n\r\n};\r\n\r\n})();\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}